# Generated by Django 3.2.7 on 2022-04-04 07:31
import json

from django.db import migrations
from metcalf.imas.data_migration_tool.data_migration import migrate_data

def latest_draft(document):
        all_drafts = document.draftmetadata_set.all()
        return all_drafts[0] if all_drafts else None

def migrate_draft_metadata(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.

    template = json.loads(open('metcalf/imas/data_migration_tool/template.json', 'r').read())
    data_migrations = json.loads(open('metcalf/imas/data_migration_tool/migrations.json', 'r').read())

    Document = apps.get_model('backend', 'Document')
    DraftMetadata = apps.get_model('backend', 'DraftMetadata')
    DocumentAttachment = apps.get_model('backend', 'DocumentAttachment')

    for document in Document.objects.all():
        new_data = migrate_data(latest_draft(document).data, template, data_migrations)

        if not new_data.get('attachments'):
            attachments = []

            # this code could probably be sped up
            for attachment in DocumentAttachment.objects.all():
                if attachment.document == document:
                    attachments.append({
                        'id': attachment.id,
                        'file': f'{attachment.file}',
                        'name': attachment.name,
                        'delete_url': f'/delete/{new_data.get("fileIdentifier")}/{attachment.id}',
                        'created': attachment.created,
                        'modified': attachment.modified
                    })
        
            if len(attachments) > 0:
                new_data['attachments'] = attachments

        DraftMetadata.objects.create(
            document=document,
            user=document.owner,
            data=new_data
        )

class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0008_draftmetadata_doirequested'),
    ]

    operations = [
        migrations.RunPython(migrate_draft_metadata)
    ]
