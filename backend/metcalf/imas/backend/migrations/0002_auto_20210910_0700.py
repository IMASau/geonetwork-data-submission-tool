# Generated by Django 3.2.7 on 2021-09-10 07:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_fsm
import metcalf.common.utils
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
        ('backend', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnzsrcKeyword',
            fields=[
                ('UUID', models.CharField(default='', editable=False, max_length=256, primary_key=True, serialize=False, verbose_name='URL')),
                ('Category', models.CharField(max_length=128)),
                ('Topic', models.CharField(max_length=128)),
                ('Term', models.CharField(max_length=128)),
                ('VariableLevel1', models.CharField(max_length=128)),
                ('VariableLevel2', models.CharField(max_length=128)),
                ('VariableLevel3', models.CharField(max_length=128)),
                ('DetailedVariable', models.CharField(max_length=128)),
                ('uri', models.CharField(blank=True, default='', max_length=512, null=True)),
            ],
            options={
                'ordering': ['Category', 'Topic', 'Term', 'VariableLevel1', 'VariableLevel2', 'VariableLevel3', 'DetailedVariable'],
            },
        ),
        migrations.CreateModel(
            name='DataFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField()),
                ('last_refresh', models.DateTimeField(blank=True, null=True)),
                ('last_success', models.DateTimeField(blank=True, null=True)),
                ('last_failure', models.DateTimeField(blank=True, null=True)),
                ('last_duration', models.DurationField(blank=True, null=True)),
                ('last_output', models.TextField(blank=True)),
                ('state', django_fsm.FSMField(choices=[('Idle', 'Idle'), ('Scheduled', 'Scheduled'), ('Active', 'Active')], default='Scheduled', max_length=50)),
            ],
            options={
                'permissions': (('datafeed_schedule', 'Can schedule datafeed refresh'), ('datafeed_unschedule', 'Can cancel scheduled datafeed schedule'), ('datafeed_admin', 'Can administer datafeed')),
            },
        ),
        migrations.CreateModel(
            name='HorizontalResolution',
            fields=[
                ('uri', models.CharField(default='', max_length=512, primary_key=True, serialize=False)),
                ('prefLabel', models.CharField(max_length=256)),
                ('prefLabelSortText', models.CharField(default='', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='ParameterInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lft', models.PositiveIntegerField(db_index=True)),
                ('rgt', models.PositiveIntegerField(db_index=True)),
                ('tree_id', models.PositiveIntegerField(db_index=True)),
                ('depth', models.PositiveIntegerField(db_index=True)),
                ('URI', models.CharField(db_column='URI', max_length=128)),
                ('Name', models.CharField(db_column='Name', max_length=128)),
                ('Definition', models.CharField(db_column='Definition', max_length=2500)),
                ('is_selectable', models.BooleanField()),
                ('Version', models.CharField(db_column='Version', max_length=16)),
            ],
            options={
                'ordering': ['Name'],
            },
        ),
        migrations.CreateModel(
            name='ParameterName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lft', models.PositiveIntegerField(db_index=True)),
                ('rgt', models.PositiveIntegerField(db_index=True)),
                ('tree_id', models.PositiveIntegerField(db_index=True)),
                ('depth', models.PositiveIntegerField(db_index=True)),
                ('URI', models.CharField(db_column='URI', max_length=128)),
                ('Name', models.CharField(db_column='Name', max_length=128)),
                ('Definition', models.CharField(db_column='Definition', max_length=4096)),
                ('is_selectable', models.BooleanField()),
                ('Version', models.CharField(db_column='Version', max_length=16)),
            ],
            options={
                'ordering': ['Name'],
            },
        ),
        migrations.CreateModel(
            name='ParameterPlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lft', models.PositiveIntegerField(db_index=True)),
                ('rgt', models.PositiveIntegerField(db_index=True)),
                ('tree_id', models.PositiveIntegerField(db_index=True)),
                ('depth', models.PositiveIntegerField(db_index=True)),
                ('URI', models.CharField(db_column='URI', max_length=128)),
                ('Name', models.CharField(db_column='Name', max_length=128)),
                ('Definition', models.CharField(db_column='Definition', max_length=5000)),
                ('is_selectable', models.BooleanField()),
                ('Version', models.CharField(db_column='Version', max_length=16)),
            ],
            options={
                'ordering': ['Name'],
            },
        ),
        migrations.CreateModel(
            name='ParameterUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lft', models.PositiveIntegerField(db_index=True)),
                ('rgt', models.PositiveIntegerField(db_index=True)),
                ('tree_id', models.PositiveIntegerField(db_index=True)),
                ('depth', models.PositiveIntegerField(db_index=True)),
                ('URI', models.CharField(db_column='URI', max_length=128)),
                ('Name', models.CharField(db_column='Name', max_length=128)),
                ('Definition', models.CharField(db_column='Definition', max_length=256)),
                ('is_selectable', models.BooleanField()),
                ('Version', models.CharField(db_column='Version', max_length=16)),
            ],
            options={
                'ordering': ['Name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.CharField(default='', max_length=512)),
                ('orgUri', models.CharField(blank=True, default='', max_length=512)),
                ('familyName', models.CharField(blank=True, max_length=256, verbose_name='family name')),
                ('givenName', models.CharField(blank=True, max_length=256, verbose_name='given name')),
                ('honorificPrefix', models.CharField(blank=True, max_length=256, verbose_name='honorific')),
                ('orcid', models.CharField(blank=True, default='', max_length=50, verbose_name='ORCID ID')),
                ('prefLabel', models.CharField(blank=True, default='', max_length=512)),
                ('isUserAdded', models.BooleanField(default=False, verbose_name='User Added')),
                ('electronicMailAddress', models.CharField(blank=True, default='', max_length=256, verbose_name='email')),
            ],
            options={
                'ordering': ['familyName', 'givenName'],
            },
        ),
        migrations.CreateModel(
            name='RoleCode',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Identifier', models.CharField(max_length=128)),
                ('Description', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['Identifier', 'Description'],
            },
        ),
        migrations.CreateModel(
            name='SamplingFrequency',
            fields=[
                ('uri', models.CharField(default='', max_length=512, primary_key=True, serialize=False)),
                ('prefLabel', models.CharField(max_length=256)),
                ('prefLabelSortText', models.CharField(default='', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='TopicCategory',
            fields=[
                ('identifier', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['identifier'],
            },
        ),
        migrations.AddField(
            model_name='draftmetadata',
            name='noteForDataManager',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='institution',
            name='altLabel',
            field=models.CharField(default='', max_length=512),
        ),
        migrations.AddField(
            model_name='institution',
            name='exactMatch',
            field=models.CharField(default='', max_length=512),
        ),
        migrations.AddField(
            model_name='institution',
            name='isUserAdded',
            field=models.BooleanField(default=False, verbose_name='User Added'),
        ),
        migrations.AddField(
            model_name='institution',
            name='prefLabel',
            field=models.CharField(default='', max_length=512),
        ),
        migrations.AddField(
            model_name='institution',
            name='uri',
            field=models.CharField(default='', max_length=512),
        ),
        migrations.AddField(
            model_name='sciencekeyword',
            name='uri',
            field=models.CharField(blank=True, default='', max_length=512, null=True),
        ),
        migrations.AlterField(
            model_name='document',
            name='status',
            field=django_fsm.FSMField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Uploaded', 'Uploaded'), ('Archived', 'Archived'), ('Discarded', 'Discarded')], default='Draft', max_length=50),
        ),
        migrations.AlterField(
            model_name='document',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.metadatatemplate'),
        ),
        migrations.AlterField(
            model_name='document',
            name='title',
            field=models.TextField(default='Untitled'),
        ),
        migrations.AlterField(
            model_name='documentattachment',
            name='file',
            field=models.FileField(upload_to=metcalf.common.utils.no_spaces_in_filename),
        ),
        migrations.AlterField(
            model_name='draftmetadata',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='institution',
            name='administrativeArea',
            field=models.CharField(max_length=100, verbose_name='state'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='country',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='institution',
            name='deliveryPoint',
            field=models.CharField(max_length=256, verbose_name='street address'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='deliveryPoint2',
            field=models.CharField(max_length=256, verbose_name='street address 2'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='organisationName',
            field=models.CharField(max_length=256, verbose_name='organisation name'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='postalCode',
            field=models.CharField(max_length=100, verbose_name='postcode'),
        ),
        migrations.AlterField(
            model_name='metadatatemplate',
            name='file',
            field=models.FileField(help_text='XML file used when creating and exporting records', upload_to='', verbose_name='metadata_templates'),
        ),
        migrations.AlterField(
            model_name='metadatatemplate',
            name='name',
            field=models.CharField(help_text='Unique name for template.  Used in menus.', max_length=128),
        ),
        migrations.AlterField(
            model_name='metadatatemplate',
            name='notes',
            field=models.TextField(help_text='Internal use notes about this template'),
        ),
        migrations.AlterField(
            model_name='metadatatemplate',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.site'),
        ),
        migrations.CreateModel(
            name='MetadataTemplateMapper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique name for template mapper.  Used in menus.', max_length=128)),
                ('file', models.FileField(help_text='JSON file used to interpret XML files that specify records', upload_to='', verbose_name='metadata_template_mappers')),
                ('notes', models.TextField(help_text='Internal use notes about this template mapper')),
                ('archived', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sites.site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='metadatatemplate',
            name='mapper',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.metadatatemplatemapper'),
        ),
    ]
