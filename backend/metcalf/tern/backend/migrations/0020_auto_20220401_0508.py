# Generated by Django 3.2.7 on 2022-04-01 05:08
import json
import logging

from django.db import migrations
from metcalf.tern.data_migration_tool.data_migration import migrate_data

logger = logging.getLogger(__name__)

def latest_draft(document):
        all_drafts = document.draftmetadata_set.all()
        return all_drafts[0] if all_drafts else None

def v3_to_v4_draft_metadata(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.

    template = json.loads(open('metcalf/tern/data_migration_tool/template.json', 'r').read())
    data_migrations = json.loads(open('metcalf/tern/data_migration_tool/migrations.json', 'r').read())

    Document = apps.get_model('backend', 'Document')
    DraftMetadata = apps.get_model('backend', 'DraftMetadata')

    for document in Document.objects.all():
        try:
            draft = latest_draft(document)
            if draft:
                DraftMetadata.objects.create(
                    document=document,
                    user=document.owner,
                    data=migrate_data(draft.data, template, data_migrations)
                )
        except:
            logger.error(f'failed to migrate document {document.uuid}')
            raise

class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0019_alter_document_contributors'),
    ]

    operations = [
        migrations.RunPython(v3_to_v4_draft_metadata)
    ]